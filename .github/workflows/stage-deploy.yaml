
name: deploy to stage
on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      ##
      ## checkout and build
      ##

      - name: checkout
        uses: actions/checkout@v2

      - name: npm install and build
        shell: bash
        run: npm install -s && npm run build -s

      ##
      ## web content docker image
      ##

      ##
      ## microservice docker images
      ##

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/auth-server
          tags: stage
          dockerfile: ./source/microservices/auth-server/Dockerfile


      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/liveshow-server
          tags: stage
          dockerfile: ./source/microservices/liveshow-server/Dockerfile


      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/paywall-server
          tags: stage
          dockerfile: ./source/microservices/paywall-server/Dockerfile

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/questions-server
          tags: stage
          dockerfile: ./source/microservices/questions-server/Dockerfile


      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/schedule-server
          tags: stage
          dockerfile: ./source/microservices/schedule-server/Dockerfile


      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: chase-moskal/metalshop/settings-server
          tags: stage
          dockerfile: ./source/microservices/settings-server/Dockerfile

      ##
      ## DEPLOY TO DEVELOPMENT CLUSTER: coming soon!?!?
      ##

      # - name: set azure kubectl context
      #   uses: azure/aks-set-context@v1
      #   with:
      #       creds: '${{ secrets.AKS_CREDENTIALS }}'
      #       resource-group: workgroup
      #       cluster-name: workback
      #   id: login
      # - name: production deployment
      #   shell: bash
      #   env:
      #     METALBACK_CONFIG: '${{ secrets.METALBACK_CONFIG }}'
      #     AUTH_SERVER_PUBLIC_PEM: '${{ secrets.AUTH_SERVER_PUBLIC_PEM }}'
      #     AUTH_SERVER_PRIVATE_PEM: '${{ secrets.AUTH_SERVER_PRIVATE_PEM }}'
      #   run: |
      #     cd metalback
      #     rm -rf config && mkdir config
      #     echo "$METALBACK_CONFIG" > config/config.yaml
      #     echo "$AUTH_SERVER_PUBLIC_PEM" > config/auth-server.public.pem
      #     echo "$AUTH_SERVER_PRIVATE_PEM" > config/auth-server.private.pem
      #     ./proddeploy

      ##
      ## deploy frontend to github pages
      ##

      # - name: gh-pages deploy
      #   shell: bash
      #   run: |
      #     git config --global user.email "chasemoskal@gmail.com"
      #     git config --global user.name "Robotic Chase (CI/CD)"
      #     git fetch origin master \
      #       && git fetch origin gh-pages \
      #       && git checkout --track origin/gh-pages \
      #       && git rebase --onto origin/master origin/gh-pages~3 gh-pages \
      #       && npm install -s \
      #       && npm run build -s \
      #       && git add . \
      #       && git commit --amend --no-edit --reset-author \
      #       && git push -f
