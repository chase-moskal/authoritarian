#!/usr/bin/env bash

#
# parameters and handy variables
#

COMMAND=$1
CONTAINER=$2
COMMANDLIST="'build', 'run', 'debug', or 'buildall'"

#
# functions
#

dockerbuild() {
	NAME=$1
	docker build \
		-f ./source/microservices/$NAME/Dockerfile \
		-t chasemoskal/$NAME \
		.
}

require_param_container() {
	if [[ ! -z "$COMMAND" && -z "$CONTAINER" ]]; then
		echo "ERR container param required, eg 'auth-server'"
		exit -1
	fi
}

#
# always require the command parameter
#

if [ -z "$COMMAND" ]; then
	echo "ERR command param required, eg $COMMANDLIST"
	exit -1
fi

#
# command implementations
#

if [ "$COMMAND" == "buildall" ]; then
	dockerbuild auth-server & \
	dockerbuild liveshow-server & \
	dockerbuild paywall-server & \
	wait

elif [ "$COMMAND" == "build" ]; then
	require_param_container
	dockerbuild $CONTAINER

elif [ "$COMMAND" == "run" ]; then
	require_param_container
	docker run \
		--name $CONTAINER \
		--mount type=bind,source=$(pwd)/metalback/config,target=/app/metalback/config \
		--network br0 \
		--publish 8000:8000 \
		--rm \
		-it \
		chasemoskal/$CONTAINER

elif [ "$COMMAND" == "debug" ]; then
	require_param_container
	docker run \
		--name $CONTAINER \
		--mount type=bind,source=$(pwd)/metalback/config,target=/app/metalback/config \
		--network br0 \
		--publish 8000:8000 \
		--rm \
		-it \
		chasemoskal/$CONTAINER \
		bash

else
	echo "ERR unknown command, must be $COMMANDLIST"

fi
